/*****************************************************************************           c ''''''''''''''''''''''''''''''''''''''''''''''''' c         c  cccccccccccccccccccccccccc cccccccccccccccccccccccc  c        c  ccc@@@@cccc@@@@cc@ccc@ccc@c ccc    ccc    cccc    ccc  c       c  ccc@cccc@cc@ccc@@c@ccc@ccc@c cc cccc c cccc cc cccc ccc  c       c  ccc@cccc@c@ccc@@cc@ccc@ccc@c c cccccc cccccc c cccc ccc  c       c  ccc@cccc@cc@cccccc@ccc@ccc@c cc cccc c cccc cc cccc ccc  c        c  cc@cccc@ccc@@@@ccc@@@c@@@cc ccc    ccc    ccc ccc ccc  c         c  cccccccccccccccccccccccccccccccccccccccccccc cccccc  c           c ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, c© NewLoop Ltd: 020 7702 3130Author Lindsey Fallow: lindz@btinternet.com****************************************************************************                       CLASS DESCRIPTION AND DEFINITION            *                                                     *                      *                                                     *                      *                                                     *                      *                                                     *                      *                                                     *                      *                                                     *                      *                                                     *                      *                                                     *          ****************************************************************************        Code Conventions:        Class        verbMethod        nounProperty        _nounProperty = simple property relating directly to MovieClip properties (height, width etc)        isBoolean        onCallback        _mc = MovieClip        _txt = TextField        _arr = Array        _str = String        tVariableName = temporary variable for calculation or data handling purposes*****************************************************************************/package com.newloop.util {	//	import flash.display.DisplayObject;	import flash.display.DisplayObjectContainer;	public class DisplayObjectUtilities {				/** Find any children of the haystackDisplayObject overlapping a needleDisplayObject.  Purpose		is primarily to find objects included in a selection area 				@param haystackDisplayObj A display object container in which to check children.		@param needleDisplayObj A display object to act as the boundary area.		*/				public static function findChildrenOverlappingObject(haystackDisplayObj:DisplayObjectContainer, needleDisplayObj:DisplayObject):Array{						var matchesArray:Array = [];						var iLength:uint = haystackDisplayObj.numChildren;			for(var i:uint = 0;i<iLength;i++){				var nextChild:DisplayObject = haystackDisplayObj.getChildAt(i);								if(nextChild.hitTestObject(needleDisplayObj)){					matchesArray.push(nextChild);				}			}						return matchesArray;				}	}}