/*****************************************************************************           c ''''''''''''''''''''''''''''''''''''''''''''''''' c         c  cccccccccccccccccccccccccc cccccccccccccccccccccccc  c        c  ccc@@@@cccc@@@@cc@ccc@ccc@c ccc    ccc    cccc    ccc  c       c  ccc@cccc@cc@ccc@@c@ccc@ccc@c cc cccc c cccc cc cccc ccc  c       c  ccc@cccc@c@ccc@@cc@ccc@ccc@c c cccccc cccccc c cccc ccc  c       c  ccc@cccc@cc@cccccc@ccc@ccc@c cc cccc c cccc cc cccc ccc  c        c  cc@cccc@ccc@@@@ccc@@@c@@@cc ccc    ccc    ccc ccc ccc  c         c  cccccccccccccccccccccccccccccccccccccccccccc cccccc  c           c ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, c© NewLoop Ltd: 020 7702 3130Author Lindsey Fallow: lindz@btinternet.com****************************************************************************                       CLASS DESCRIPTION AND DEFINITION            *                                                     *                      *                                                     *                      *                                                     *                      *                                                     *                      *                                                     *                      *                                                     *                      *                                                     *                      *                                                     *          ****************************************************************************        Code Conventions:        Class        verbMethod        nounProperty        _nounProperty = simple property relating directly to MovieClip properties (height, width etc)        isBoolean        onCallback        _mc = MovieClip        _txt = TextField        _arr = Array        _str = String        tVariableName = temporary variable for calculation or data handling purposes*****************************************************************************/package com.newloop.util{	//	import flash.net.navigateToURL;	import flash.net.URLRequest;	import flash.external.ExternalInterface;	//	import com.newloop.util.ScreenTracer;	//	public class BrowserUtilities {		//		//                               **** DEFINE VARIABLES ****		//		//		//                                    **** CONSTRUCTOR ****		//		public function BrowserUtilities() {			//			//		}		//		//		//                                    **** PUBLIC FNS ****		//		//		//		public static  function getURL(url:String,window:String="_blank"):void {			var urlRequest:URLRequest=new URLRequest(url);			navigateToURL(urlRequest,window);		}		//		public static  function sendToGoogleAnalytics(path:String):void {			var screenTracer:ScreenTracer = ScreenTracer.getInstance();			screenTracer.traceMessage("sending to GA");			if (ExternalInterface.available) {				ExternalInterface.call("urchinTracker", path);				screenTracer.traceMessage("ExternalInterface found");			} else {				screenTracer.traceMessage("ExternalInterface not found");			}					}				public static function callPopWin(path:String):void{			trace("callPopWin");			var screenTracer:ScreenTracer = ScreenTracer.getInstance();			screenTracer.traceMessage("sending to JS");			if (ExternalInterface.available) {								ExternalInterface.call("popwin", path);				screenTracer.traceMessage("ExternalInterface found");							} else {				screenTracer.traceMessage("ExternalInterface not found");				BrowserUtilities.getURL(path);			}		}		//		public function destroy():Boolean {			// destroy this and any child clips, or don't			// defaults to not allowing destruction			return false;		}		//		public function debug():void {			trace('');			trace('debugging in : ' + this);			//			trace('             > ');		}		//		//                                    **** PRIVATE FNS ****		//	}}//